<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ItchToolkit</name>
    </assembly>
    <members>
        <member name="T:ItchToolkit.DeveloperGamesRequest">
            <summary>
            Data about all the games you've uploaded or have edit access to.
            </summary>
        </member>
        <member name="T:ItchToolkit.DeveloperGamesRequest.RequestType">
            <summary>
            Request types compatible with my-games API Call.
            </summary>
        </member>
        <member name="T:ItchToolkit.DeveloperGamesRequest.RequestType.Game">
            <summary>
            Detailed information on a game.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.gameCoverURL">
            <summary>
            Imaged used to represent your game.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.createdDate">
            <summary>
            Date game was created in Itch.io
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.downloadCount">
            <summary>
            How many downloads your game has.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.gameID">
            <summary>
            The game ID of your game, used for API calls.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.minPrice">
            <summary>
            The minimum purchase price for your game.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.supportsAndroid">
            <summary>
            If the game supports Android.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.supportsLinux">
            <summary>
            If the game supports Linux.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.supportsOSX">
            <summary>
            If the game supports Mac OSX.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.supportsWindows">
            <summary>
            If the game supports Windows.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.isPublished">
            <summary>
            If the game has been published.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.publishedDate">
            <summary>
            Date game was published.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.purchaseCount">
            <summary>
            How many times your game has been purchased.
            <para></para>
            Use <see cref="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.downloadCount"/> to view how many times game has been downloaded.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.gameDescription">
            <summary>
            Description added to game when publishing on Itch.io
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.gameTitile">
            <summary>
            The title of your game when publishing on Itch.io
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.type">
            <summary>
            Publish type.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.gameURL">
            <summary>
            HTTP address for your game on Itch.io
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.viewCount">
            <summary>
            How many people have viewed your game.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.earnings">
            <summary>
            List of purchase summaries for each purchase this game has.
            </summary>
        </member>
        <member name="T:ItchToolkit.DeveloperGamesRequest.RequestType.Game.Earning">
            <summary>
            A summary for each purchase this game has.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.Earning.currency">
            <summary>
            Currency Type.
            <para></para>
            Example: USD
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.Earning.purchaseAmountString">
            <summary>
            Purchase amount in string format.
            <para></para>
            Example: $50.47
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.Game.Earning.purchaseAmountInt">
            <summary>
            Purchase amount in base format.
            <para></para>
            Example: 5047
            <para></para>
            Which equals $50.47
            </summary>
        </member>
        <member name="T:ItchToolkit.DeveloperGamesRequest.RequestType.ErrorType">
            <summary>
            Error types that can be returned for invalid API calls.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.ErrorType.InvalidKey">
            <summary>
            {"errors":["invalid key"]}
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.ErrorType.OutOfScopeKey">
            <summary>
            {"errors":["api key does not permit `profile:games`"]}
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.ErrorType.DetailsMissing">
            <summary>
            Custom error, for when the user has passed NULL values to the request.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.RequestType.ErrorType.NULL">
            <summary>
            No Error returned
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.games">
            <summary>
            Detailed information on all games returned in API call.
            </summary>
        </member>
        <member name="F:ItchToolkit.DeveloperGamesRequest.requestError">
            <summary>
            Error returned for invalid API call.
            </summary>
        </member>
        <member name="M:ItchToolkit.DeveloperGamesRequest.#ctor(System.String)">
            <summary>
            Fetches data about all the games you've uploaded or have edit access to.
            </summary>
        </member>
        <member name="M:ItchToolkit.DeveloperGamesRequest.FindGameID(System.String)">
            <summary>
            Searches your list of games based on search pram, returns Null if no search returns.
            </summary>
            <param name="gameTitleSearch"></param>
            <returns></returns>
        </member>
        <member name="T:ItchToolkit.DownloadKeyRequest">
            <summary>
            Checks if a download key exists for game and returns it.
            </summary>
        </member>
        <member name="T:ItchToolkit.DownloadKeyRequest.RequestType">
            <summary>
            Request types compatible with download_keys API Call.
            </summary>
        </member>
        <member name="T:ItchToolkit.DownloadKeyRequest.RequestType.DownloadKey">
            <summary>
            Detailed information on a Downlod_Key.
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.DownloadKey.dateCreated">
            <summary>
            Date Downlod_Key was created
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.DownloadKey.gameID">
            <summary>
            Game ID Downlod_Key belongs to
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.DownloadKey.downloads">
            <summary>
            How many times game has been download from specific Downlod_Key
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.DownloadKey.keyID">
            <summary>
            Unique id for that Downlod_Key
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.DownloadKey.owner">
            <summary>
            Container for information relevant to the user of said Downlod_Key
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.DownloadKey.downloadKey">
            <summary>
            The download key itself
            </summary>
        </member>
        <member name="T:ItchToolkit.DownloadKeyRequest.RequestType.ErrorType">
            <summary>
            Types of errors that can be returned from Itch.io API Downlod_Key request
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.ErrorType.InvalidKey">
            <summary>
            {"errors":["invalid key"]}
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.ErrorType.InvalidGameID">
            <summary>
            {"errors":["game_id must be an integer"]} or {"errors":["invalid game_id"]}
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.ErrorType.NoDownloadKey">
            <summary>
            {"errors":["no download key found"]}
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.ErrorType.DetailsMissing">
            <summary>
            Custom error, for when the user has passed NULL values to the request.
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.RequestType.ErrorType.NULL">
            <summary>
            No Error returned
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.downloadKey">
            <summary>
            Container for information relevant to requested Downlod_Key
            </summary>
        </member>
        <member name="F:ItchToolkit.DownloadKeyRequest.error">
            <summary>
            Error returned from Itch.io API Downlod_Key request
            </summary>
        </member>
        <member name="M:ItchToolkit.DownloadKeyRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Fetches a download key from and API call.
            <para></para>
            If it exists for game and returns it.
            </summary>
            <param name="yourKey"></param>
            <param name="gameID"></param>
            <param name="userID"></param>
        </member>
        <member name="T:ItchToolkit.ItchUserRequest">
            <summary>
            Container for Itch API's Profile Response
            </summary>
        </member>
        <member name="T:ItchToolkit.ItchUserRequest.RequestType">
            <summary>
            Types of information retrievable from ItchUserRequest
            </summary>
        </member>
        <member name="T:ItchToolkit.ItchUserRequest.RequestType.User">
            <summary>
            Container for information relevant to requested User
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.User.avatarURL">
            <summary>
            URL address for avatar image
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.User.displayName">
            <summary>
            Users preferred display name
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.User.isDeveloper">
            <summary>
            If the user has previously published a game on Itch.io
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.User.userID">
            <summary>
            Unique ID relevant to User
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.User.profileURL">
            <summary>
            URL address for user profile
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.User.isGamer">
            <summary>
            If the user has previously downloaded a game
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.User.userName">
            <summary>
            User name of the user
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.User.isPressUser">
            <summary>
            If the user is of press status
            </summary>
        </member>
        <member name="T:ItchToolkit.ItchUserRequest.RequestType.ErrorType">
            <summary>
            Types of errors that can be returned from Itch.io API Profile:Me request
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.ErrorType.InvalidKey">
            <summary>
            {"errors":["invalid key"]}
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.ErrorType.DetailsMissing">
            <summary>
            Custom error, for when the user has passed NULL values to the request.
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.RequestType.ErrorType.NULL">
            <summary>
            No Error returned
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.user">
            <summary>
            Container for information relevant to the requested Profile:Me
            </summary>
        </member>
        <member name="F:ItchToolkit.ItchUserRequest.requestError">
            <summary>
            Error returned from Itch.io API Profile:Me request
            </summary>
        </member>
        <member name="M:ItchToolkit.ItchUserRequest.#ctor(System.String)">
            <summary>
            Create a new container for information relevant to requested User
            </summary>
            <param name="userKey"></param>
        </member>
        <member name="M:ItchToolkit.ItchUserRequest.IsGameOwned(System.String,System.String)">
            <summary>
            Returns False if any other condition apart from Owned is met.
            To get full request information use ItchToolkit.DownloadKeyRequest()
            </summary>
            <param name="yourKey"></param>
            <param name="gameID"></param>
            <returns></returns>
        </member>
        <member name="M:ItchToolkit.ItchUserRequest.GetAvatarByteArray">
            <summary>
            If the user has an avatar, the image will be returned in the form of a byte array.
            <para></para>
            This can then passed to various Engines/IDE's to create an image in their format.
            <para></para>
            Unity Example: Texture2D.LoadImage(ItchToolkit.ItchUserRequest.GetAvatarByteArray("URL"));
            </summary>
            <returns></returns>
        </member>
        <member name="T:ItchToolkit.OAuthRequest">
            <summary>
            Manage OAuth Requests and Validation.
            </summary>
        </member>
        <member name="M:ItchToolkit.OAuthRequest.RequestOAuthApiKey(System.String)">
            <summary>
            Launches a URL to a page that request an API key giving access to the users profile information.
            <para></para>
            After accepting, this key can be used to make further API calls.
            </summary>
            <param name="clientID"></param>
        </member>
        <member name="M:ItchToolkit.OAuthRequest.IsApiKeyValid(System.String)">
            <summary>
            Verifies that the API Key given is valid for use.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
    </members>
</doc>
