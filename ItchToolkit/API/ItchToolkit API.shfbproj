<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c93dbc99-86e8-45ed-9d58-4aced6d8de56}</ProjectGuid>
    <SHFBSchemaVersion>2017.9.26.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>.NET Framework 4.5</FrameworkVersion>
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\bin\Release\netstandard2.0\ItchToolkit.dll" />
      <DocumentationSource sourceFile="..\bin\Release\netstandard2.0\ItchToolkit.xml" />
    </DocumentationSources>
    <HelpFileFormat>HtmlHelp1, MSHelpViewer, Website</HelpFileFormat>
    <SyntaxFilters>C#</SyntaxFilters>
    <PresentationStyle>VS2013</PresentationStyle>
    <CleanIntermediates>True</CleanIntermediates>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <IndentHtml>False</IndentHtml>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <SaveComponentCacheCapacity>100</SaveComponentCacheCapacity>
    <HelpTitle>ItchToolkit API Class Library</HelpTitle>
    <HelpFileVersion>1.0.0.0</HelpFileVersion>
    <RootNamespaceContainer>False</RootNamespaceContainer>
    <NamespaceGrouping>False</NamespaceGrouping>
    <MaximumGroupParts>2</MaximumGroupParts>
    <Preliminary>False</Preliminary>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <HtmlSdkLinkType>None</HtmlSdkLinkType>
    <BinaryTOC>True</BinaryTOC>
    <IncludeFavorites>False</IncludeFavorites>
    <WebsiteSdkLinkType>None</WebsiteSdkLinkType>
    <AppendMarkdownFileExtensionsToUrls>False</AppendMarkdownFileExtensionsToUrls>
    <VisibleItems>InheritedMembers, InheritedFrameworkMembers, Privates, PrivateFields, Protected, ProtectedInternalAsProtected, NonBrowsable</VisibleItems>
    <MissingTags>Summary, Parameter, Returns, AutoDocumentCtors, TypeParameter, AutoDocumentDispose</MissingTags>
    <HeaderText>&amp;lt%3bb&amp;gt%3bA tool used to verify game purchases from Itch, without the need of the Itch App itself.&amp;lt%3b/b&amp;gt%3b
&amp;lt%3bbr /&amp;gt%3b
&amp;lt%3bbr /&amp;gt%3b
&amp;lt%3bb&amp;gt%3bEasily Check If A User Has Ownership Of Your Game&amp;lt%3b/b&amp;gt%3b&amp;lt%3bbr /&amp;gt%3b
&amp;lt%3bbr /&amp;gt%3b
Main Calls:&amp;lt%3bbr /&amp;gt%3b
      -ItchToolkit.OAuthRequest.RequestOAuthApiKey%28&amp;quot%3bYour Oauth App Client ID&amp;quot%3b%29%3b&amp;lt%3bbr /&amp;gt%3b
      -ItchToolkit.ItchUserRequest userRequest = new ItchToolkit.ItchUserRequest%28&amp;quot%3bUser Token&amp;quot%3b%29%3b&amp;lt%3bbr /&amp;gt%3b
   -bool isOwned = ItchToolkit.ItchUserRequest.IsGameOwned%28&amp;quot%3bGame ID&amp;quot%3b%29%3b&amp;lt%3bbr /&amp;gt%3b
   &amp;lt%3bbr /&amp;gt%3b
Usage Flow&amp;lt%3bbr /&amp;gt%3b
  - Request an OATH Key to grant access to the users profile&amp;lt%3bbr /&amp;gt%3b
  - Use that key to retrive profile info such as User_ID&amp;lt%3bbr /&amp;gt%3b
  - Combine User and your API Key to verify purchase&amp;lt%3bbr /&amp;gt%3b
  -or&amp;lt%3bbr /&amp;gt%3b
  -Get detailed information such as Username and Avatar&amp;lt%3bbr /&amp;gt%3b
  &amp;lt%3bbr /&amp;gt%3b
Links to obtain API details can be found here:&amp;lt%3bbr /&amp;gt%3b
  - &amp;lt%3ba href=&amp;quot%3bhttps://itch.io/user/settings/oauth-apps&amp;quot%3b&amp;gt%3bSetting Up OATH App&amp;lt%3b/a&amp;gt%3b suggestion: Set authorization callback URL to urn:ietf:wg:oauth:2.0:oob&amp;lt%3bbr /&amp;gt%3b
  - &amp;lt%3ba href=&amp;quot%3bhttps://itch.io/user/settings/api-keys&amp;quot%3b&amp;gt%3bGenerating You API Web KEY&amp;lt%3b/a&amp;gt%3b&amp;lt%3bbr /&amp;gt%3b
  - &amp;lt%3ba href=&amp;quot%3bhttps://itch.io/dashboard&amp;quot%3b&amp;gt%3bObtaining Game ID&amp;lt%3b/a&amp;gt%3b get from Dashboard, click edit on game and the number will be found in the URL&amp;lt%3bbr /&amp;gt%3b
  &amp;lt%3bbr /&amp;gt%3b  
Want to build your own Itch API Library%3f&amp;lt%3bbr /&amp;gt%3b
&amp;lt%3ba href=&amp;quot%3bhttps://itch.io/docs/api/overview&amp;quot%3b&amp;gt%3bClick Here&amp;lt%3b/a&amp;gt%3b</HeaderText>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
  <!-- The pre-build and post-build event properties must appear *after* the targets file import in order to be
			 evaluated correctly. -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
</Project>